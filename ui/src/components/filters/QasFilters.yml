type: component

meta:
  desc: Componente para criação de filtros dinâmicos.

props:
  current-filters:
    model: true
    desc: Utilizado para recuperar os filtros realizados internamente.
    default: {}
    type: Object
    examples: [v-model:currentFilters="currentFilters"]

  entity:
    desc: Entidade da store, por exemplo se tiver que trabalhar com modulo de usuários, teremos o model "users" na store, que vai ser nossa "entity".
    required: true
    type: String

  fields-props:
    desc: Propriedade para repassar propriedades para cada campo individualmente.
    default: {}
    type: Object
    examples: ["{ name: { dense: true, onClick: () => alert('Estou sendo clicado') } }"]

  search-placeholder:
    desc: Placeholder do campo de busca.
    default: Pesquisar...
    type: String

  url:
    desc: Envia como parâmetro para a action "fetchFilters" do modulo correspondente a "entity".
    type: String

  use-chip:
    desc: Habilita ou não os "chips" mostrando os filtros ativos.
    default: true
    type: Boolean

  use-filter-button:
    desc: Habilita ou não o botão com menu na lateral esquerda.
    default: true
    type: Boolean

  use-force-refetch:
    desc: Força refazer o "fetch" mesmo caso já exista dados na store de filters.
    type: Boolean

  use-update-route:
    desc: Habilita ou não a atualização da rota com base nos filtros.
    default: true
    type: Boolean

  use-search-on-type:
    desc: Habilita ou não o filtro de busca sempre que o usuário digita.
    default: true
    type: Boolean

  use-search:
    desc: Habilita ou não o campo text de busca.
    default: true
    type: Boolean

  use-spacing:
    desc: Habilita ou não o espaçamento padrão do componente.
    default: true
    type: Boolean

slots:
  default:
    desc: Slot para acessar o final do componente.
    scope:
      filter:
        desc: Função usada para realizar o filtro.
        type: Function

      filters:
        desc: Objeto que retorna os filtros ativos.
        default: {}
        type: Object

      remove-filter:
        desc: Função usada para remover os filtro.
        type: Function
        examples: ["removeFilter({ name: '[nome-do-filtro]' })"]

      context:
        desc: Contexto referente a query da url.
        default: { filters: {}, page: 1 }
        type: Object

  filter-button:
    desc: Slot para seção do botão de filtro.
    scope:
      filter:
        desc: Função usada para realizar o filtro.
        type: Function

      filters:
        desc: Objeto que retorna os filtros ativos.
        default: {}
        type: Object

      remove-filter:
        desc: Função usada para remover os filtro.
        type: Function
        examples: ["removeFilter({ name: '[nome-do-filtro]' })"]

      context:
        desc: Contexto referente a query da url.
        default: { filters: {}, page: 1 }
        type: Object

  right-side:
    desc: Slot para a seção na lateral direita.

  search:
    desc: Slot para seção do campo de busca.
    scope:
      filter:
        desc: função usada para realizar o filtro.
        type: Function

events:
  '@fetch-success -> function(value)':
    desc: Dispara quando a action "fetchFilters" é executada com sucesso.
    params:
      value:
        desc: Retorna todos os dados "cru" respondido pelo fetch.
        type: Object

  '@fetch-error -> function(value)':
    desc: Dispara quando a action "fetchFilters" cai em uma exceção.
    params:
      value:
        desc: Retorna todos os dados "cru" respondido na exceção do fetch.
        type: Object

  '@update:currentFilters -> function(value)':
    desc: Dispara quando é realizado ou removido uma pesquisa no campo de busca e quando é clicado no botão "Filtrar" ou "Limpar" do filtro.
    params:
      value:
        desc: Retorna todos os filtros realizados.
        type: Object

selectors:
  filters-btn:
    desc: Seletor do botão de filtro.
    examples: ['data-cy="filters-btn"']

  filters-clear-btn:
    desc: Seletor do botão de limpar do filtro.
    examples: ['data-cy="filters-clear-btn"']

  'filters-[optionText]-chip':
    desc: Seletor do chip de acordo com o texto da opção selecionada.
    examples: ['data-cy="filters-Ativo-chip"']

  'filters-[fieldName]-field':
    desc: Seletor criado a partir da propriedade "name" do campo.
    examples: ['data-cy="filters-email-field"', 'data-cy="filters-phone-field"', 'data-cy="filters-password-field"']

  filters-submit-btn:
    desc: Seletor do botão de submit do filtro.
    examples: ['data-cy="filters-submit-btn"']
