type: component

meta:
  desc: Componente para criação de múltiplos campos dinâmicos a partir do componente `QasField`.

props:
  columns:
    desc: Colunas do grid de cada campo.
    default: col-6
    type: [Array, String, Object]
    examples: ["{ name: { sm: 6, md: 12 } }", "[{ sm: 6, md: 12 }]"]

  disable:
    desc: Deixa os campos desabilitados enviando a prop "disable" para cada campo.
    default: "false"
    type: Boolean

  error:
    desc: Objeto contendo propriedades contendo a mensagem de erro.
    default: {}
    type: Object

  fields-props:
    desc: Propriedade para repassar propriedades para cada campo individualmente.
    default: {}
    type: Object
    examples: ["{ name: { dense: true, onClick: () => alert('Estou sendo clicado') } }"]

  fields:
    desc: Lista de field contendo informações necessárias para a criação do campo correspondente.
    default: {}
    type: Object
    examples: ["{ email: { name: 'email', type: 'email', label: 'E-mail' } }"]

  fieldset:
    desc: Lista para agrupar elementos por rótulo (label).
    default: {}
    type: Object
    examples: ["{ personalInformation: { label: 'Informações pessoais', fields: [name, email] } }"]

  fieldset-gutter:
    desc: Espaçamento entre rótulos (label).
    default: lg
    type: [String, Boolean]
    examples: [xs, sm, md, lg, xl, false]

  gutter:
    desc: Espaçamento entre colunas.
    default: lg
    type: [String, Boolean]
    examples: [xs, sm, md, lg, xl, false]

  model-value:
    desc: Model do componente, usado para o v-model.
    required: true
    default: {}
    type: Object
    examples: [v-model="value"]
    model: true

  order:
    desc: Altera ordem dos campos.
    default: []
    type: Array

slots:
  'field-[nome-da-chave]':
    desc: Acessa o slot de um campo especifico.
    scope:
      field:
        desc: Payload do campo atual.
        default: {}
        type: Object
'legend-[nome-da-chave]':
    desc: Acessa o slot de um rótulo (label).

events:
  '@update:model-value -> function(value)':
    desc: Dispara quando o model-value altera, também usado para v-model.
    params:
      value:
        desc: Novo valor do model.
        type: Object
